#!/usr/bin/env python 
from math import *
import sys 
import re 
from string import Template 

#------------------------------------------------------------------------------
#   				Aspectos Físicos de la simulación
#------------------------------------------------------------------------------
#   Se realizara la simulación de la colision frontal(en orbita) de dos agujeros 
#                             negros con los siguientes parametros:	 
#------------------------------------------------------------------------------
#   Masas (en masas solares 1 M = 1.98847e30 kg )
#   Relación de masas q = mp/mm, con mp la masa mayor y mm la masa menor
#    en este caso mp = 36.0 y mm = 29.0. Escalamos el sistema tal que M = mp+mm=1
#------------------------------------------------------------------------------
q    =  36.0/29.0              # Relación de masas
M    =  1.0                    # Masa total
# momentos angulares:
chip =  0.31 #0.0                  # Componente z del vector sin espín para mp 
chim = -0.46 #0.0                  # Componente z del vector sin espín para mm
# momentos lineales:
Pr   = -0.00084541526517121;   # Momento lineal radial
Pphi =  0.09530152296974252;   #Momento angular 
#------------------------------------------------------------------------------
#  Distancia entre masas (en masas solares 1 M = 1476.66 m = 1.476 km ) 
D = 10 
#------------------------------------------------------------------------------
#   Tiempo total de colisión (en masa solares 1 M = 4.925e−6 s)
t =
#-----------------------------------------------------------------------------------
# Valores reescalados del sistema
#----------------------------------------------------------------------------------------
#Masas de los agujeros negros. 
mp = M*q/(1+q)
mm = M*1/(1+q)

#Posiciones de los agujeros negros, considerando el Com en el origen. 
xp =  D*mm 
xm = -D*mp 

#Momentos angulares (a=chi*m**2 ):
Spx = 0.;
Spy = 0.;
Spz = chip*mp**2

Smx = 0.;
Smy = 0.;
Smz = chim*mm**2 

#Momentos lineales
Ppx = Pr
Ppy = Phi
Ppz = 0

Pmx = -Ppx
Pmy = -Ppy
Pmz = -Ppz

#-------------------------------------------------------------------------------
# Datos de la malla:
#-------------------------------------------------------------------------------
#Espaciado de la malla:
dr = 2.0

#Factor de Courant 
dt0 = 
 
#extensión de la malla
extension = 




#Se almacenan las variables para despues modificar el archivo

local_var = locals()
col_width = 0
for key,val in sorted(local_var.items()):
    if isinstance(val, (int, float, complex, str)):
        col_width = max(len(str(key)), col_width)

var_settings = []
for key,val in sorted(local_var.items()):
    if isinstance(val, (int, float, complex, str)):
        var_settings = var_settings + ["# {0}{1} = {2}".format(key," "*(col_width-len(key)),val)]

var_settings_str = "\n".join(var_settings)


#La cadena(string) lines se modifican si se cambian las variables anteriores
lines = """
$var_settings_str 
#------------------------------------------------------------------------------
#   Parametros de Cactus:
#------------------------------------------------------------------------------
# Se muestran todas las alertas de peligro.
Cactus::cctk_full_warnings              = yes 

#Especificamos al tiempo como el parametro de finalización de la simualción.
Cactus::terminate                       = time
#Colocamos el número de iteraciones 
Cactus::cctk_final_time                 = $t_final    


#---------------------------------------------------------------------------------
# Estructura de la malla
#---------------------------------------------------------------------------------
# Thorns necesarias
#----------------------------------------------------------------------------------
#Carpet es el controlador a utilizar  
ActiveThorns = "Carpet CarpetLib CarpetInterp CarpetReduce CarpetSlab"

#Especifican las fronteras y las estructura de la malla
ActiveThorns = "Boundary CartGrid3D CoordBase"

#Permiten definir simetrías en el dominio computacional
ActiveThorns = " ReflectionSymmetry SymBase"
ActiveThorns = "RotatingSymmetry180"

#Permiten definir los métodos AMR
ActiveThorns = "CarpetRegrid2"

ActiveThorns = "CarpetMask"

#Permite crear superficies esfericas para AHFinder y para Weyl4
AvtiveThorns = "SphericalSurface "

#---------------------------------------------------------------------
#Se le especifica a Carpet que se utilizara coordbase para definir la extension

Carpet::domain_from_coordbase           = "yes" 
CartGrid3D::type                        = "coordbase"
CartGrid3D::domain                      = "full"
CartGrid3D::avoid_origin                = "no"


#El tamaño del dominio computacional esta en función del valor maximo y minimo 
CoordBase::damainsize                   = "minmax"

#Espaciamiento de la malla 
CoordBase::spacing                      = "gridspacing"

#Valores maximos y minimos en cada coordenada
CoordBase::xmax                         = $extension
CoordBase::ymax                         = $extension
CoordBase::zmax                         = $extension

CoordBase::xmin                         = -$extension
CoordBase::ymin                         = -$extension
CoordBase::zmin                         = 0.0

#Tamaño del espaciamiento 
CoordBase::dx                           = $dr
CoordBase::dy                           = $dr
CoordBase::dz                           = $dr

#Cantidad de puntos en la frontera:

#Parte inferior
CoordBase::boundary_size_lower_x        = 3  
CoordBase::boundary_size_lower_y        = 3
CoordBase::boundary_size_lower_z        = 3

#Parte superior
CoordBase::boundary_size_upper_x        = 3
CoordBase::boundary_size_upper_y        = 3
CoordBase::boundary_size_upper_z        = 3

#Simetrías

ReflectionSymmetry::reflection_z        = "yes"
ReflectionSymmetry::reflection_y        = "no"
ReflectionSymmetry::reflection_x        = "no"

#Evitar el origen
ReflectionSymmetry::avoid_origin_z      = "no" 
ReflectionSymmetry::avoid_origin_y      = "no"
ReflectionSymmetry::avoid_origin_x      = "no"

#--------------------------------------------------------------------------------
# Configuración de Carpet:
#--------------------------------------------------------------------------------

# No habilitar almacenamiento para todas las funciones de malla
Carpet::enable_all_storge               = "no"

# No incluir barras entre elementos programados 
Carpet::schedule_barriers               = "no"

# Zonas fantas 
driver::ghost_size                      = 3

#Interpolaciones temporales y espaciales y su orden
Carpet::use_buffer_zones                = "yes"
Carpet::prolongation_order_space        = 5
Carpet::prolongation_order_time         = 2

CarpetInterp::check_tree_search         = "no"
CarpetInterp::tree_search               = "yes"

#Llenar niveles de tiempo pasados a partir de niveles actuales
Carpet::init_fill_timelevels            = "yes"
Carpet::init_3_timelevels               = "no"

#Detectar elementos no inicializados de la malla 
Carpet::poison_new_timelevels           = "yes"
Carpet::check_for_poison                = "no" 
CarpetLib::poison_memory                = "yes"
CarpetLib::poison_value                 = 114

CarpetLib::output_bbboxes               = "no"
CarpetLib::interleave_communications    = "yes"
CarpetLib::combine_sends                = "yes"

CarpetRegrid2::freeze_unaligned_levels  = "yes"
CarperRegrid2::symmetry_rotating180     = "yes"


#--------------------------------------------------------------------------------
# AMR 
#--------------------------------------------------------------------------------

#Número de refinamientos
Carpet::max_refinement_levels           = 9
Carpet::time_refinement_factors         = "[1,1,2,4,8,16,32,64,128,256]"

#De acuerdo a 2**(max_refinament_levels-2)
CarpetRigrid2::regrid_every             = 32 

CarpetRigrid2::num_centres              = 2

CarpetRegrid2::num_levels_1             = $rlsp
CarpetRegrid2::position_x_1             = $xp
CarpetRegrid2::radius_1                 = $levelsp
CarpetRegrid2::radius_1[ 1]             =  64.0
CarpetRegrid2::radius_1[ 2]             =  16.0
CarpetRegrid2::radius_1[ 3]             =   8.0
CarpetRegrid2::radius_1[ 4]             =   4.0
CarpetRegrid2::radius_1[ 5]             =   2.0
CarpetRegrid2::radius_1[ 6]             =   1.0
CarpetRegrid2::movement_threshold_1     =   0.16


CarpetRegrid2::num_levels_2             = $rlsm
CarpetRegrid2::position_x_2             = $xm
CarpetRegrid2::radius_2                 = $levelsm
arpetRegrid2::radius_2[ 1]              =  64.0
CarpetRegrid2::radius_2[ 2]             =  16.0
CarpetRegrid2::radius_2[ 3]             =   8.0
CarpetRegrid2::radius_2[ 4]             =   4.0
CarpetRegrid2::radius_2[ 5]             =   2.0
CarpetRegrid2::radius_2[ 6]             =   1.0
CarpetRegrid2::movement_threshold_2     =   0.16


#Excluir el interior 

CarpetMask::excluded_surface       [0] = 0
CarpetMask::excluded_surface_factor[0] = 1.0

CarpetMask::excluded_surface       [1] = 1
CarpetMask::excluded_surface_factor[1] = 1.0

CarpetMask::excluded_surface       [2] = 2
CarpetMask::excluded_surface_factor[2] = 1.0

#--------------------------------------------------------------------------------
# Superficie esfericas
#--------------------------------------------------------------------------------
SphericalSurface::nsurface              = 5
SphericalSurface::maxntheta             = 39
SphericalSurface::maxnphi               = 76

#Superficies utilizadas por AHFDirect

# Primer horizonte 
SphericalSurface::ntheta            [2] = 39
SphericalSurface::nphi              [2] = 76
SphericalSurface::nghoststheta      [2] = 2
SphericalSurface::nghostsphi        [2] = 2

#Segundo horizonte 
SphericalSurface::ntheta            [3] = 39
SphericalSurface::nphi              [3] = 76
SphericalSurface::nghoststheta      [3] = 2
SphericalSurface::nghostsphi        [3] = 2

#Horizonte común
SphericalSurface::ntheta            [4] = 39
SphericalSurface::nphi              [4] = 76
SphericalSurface::nghoststheta      [4] = 2
SphericalSurface::nghostsphi        [4] = 2

#------------------------------------------------------------------------------
# Condiciones de Tiempo:
#------------------------------------------------------------------------------
#Thorns necesarias 
ActiveThornes = "Time TerminationTrigger"
#------------------------------------------------------------------------------

#Pasos temporales:
time::timestep_method                     = "courant_static"
time::dtfac                               = $dt0

# Maximo tiempo de la simulación:
TerminationTrigger::max_walltime          =
TerminationTrigger::on_remaining_walltime =
 

#------------------------------------------------------------------------------
# Condiciones iniciales:
#------------------------------------------------------------------------------
# Thorns necesarias
ActiveThorns = "ADMCoupling ADMMacros CoordGauge SpaceMask StaticConformal TmunuBase"
ActiveThorns = "TwoPunctures"
#-------------------------------------------------------------------------------
# ADM
#-------------------------------------------------------------------------------
ADMMacros::spatial_order     = 4

ADMBase::metric_type         = "physical"

ADMBase::initial_data        = "twopunctures"
ADMBase::initial_lapse       = "twopunctures-averaged"
ADMBase::initial_shift       = "zero"
ADMBase::initial_dtlapse     = "zero"
ADMBase::initial_dtshift     = "zero"
 
#Se utilizan en AHFinders
ADMBase::metric_timelevels = 3  
 
#------------------------------------------------------------------------------
# Two Punctures
#------------------------------------------------------------------------------
#Coordenadas para los "pinchazos", separación dada por par_b
TwoPunctures::par_b  =  

#Descripción del agujero negro con masa mayor:
#Masa 
TwoPunctures::par_m_plus  = $mp
#Momento lineal
TwoPunctures::par_P_plus [1]  = $Ppx  
TwoPunctures::par_P_plus [2]  = $Ppy
TwoPunctures::par_P_plus [3]  = $Ppz
#Momento angular
TwoPunctures::par_S_plus [1]  = $Spx
TwoPunctures::par_S_plus [2]  = $Spy
TwoPunctures::par_S_plus [3]  = $Spz
  

#Descripción del agujero negro con masa menor:
#Masa 
TwoPunctures::par_m_plus  = $mm
#Momento lineal
TwoPunctures::par_P_plus [1]  = $Pmx
TwoPunctures::par_P_plus [2]  = $Pmy
TwoPunctures::par_P_plus [3]  = $Pmz
#Momento angular 
TwoPunctures::par_S_plus [1]  = $Smx
TwoPunctures::par_S_plus [2]  = $Smy 
TwoPunctures::par_S_plus [3]  = $Smz

#-------------------------------------------------------------------------------------------------
# Métodos evolutivos:
#--------------------------------------------------------------------------------------------------
# Thorns necesarias:
#-------------------------------------------------------------------------------------------------
#Evolucionar variables ADM
ActiveThorns = "ML_BSSN ML_BSSN_Helper NewRad"

#Seguimiento de Punturas
ActiveThorns = "CarpetTracker"
ActiveThorns = "PunctureTracker"

#Evolucionador temporal 
ActiveThorns = "Mol Time"

#Establecemos el método de evolución utilizado en la variables ADM:

ADMBase::evolution_method               = "ML_BSSN"
ADMBase::lapse_evolution_method         = "ML_BSSN"
ADMBase::shift_evolution_method         = "ML_BSSN"
ADMBase::dtlapse_evolution_method       = "ML_BSSN"
ADMBase::dtshift_evolution_method       = "ML_BSSN"

#Establecemos valores para los parametros de norma

ML_BSSN::harmonicN                      = 1     #1+log
ML_BSSN::harmonicF                      = 2.0   #1+log
ML_BSSN::LapseAdvectionCoeff            = 1.0

ML_BSSN::ShiftGammaCoeff                = 0.75
ML_BSSN::BetaDriver                     = 1.0   
ML_BSSN::ShiftAdvectionCoeff            = 1.0   

ML_BSSN::MinimumLapse                   = 1.0e-8

ML_BSSN::my_initial_boundary_condition  = " extrapolate - gammas "
ML_BSSN::my_rhs_boundary_condition      = " NewRad "
Boundary :: radpower                    = 2

#Se utiliza el método de lineas con un integrador de Runge-Kutta de 4to orden 
MoL::ODE_Method                         = "RK4"
MoL::MoL_Intermediate_Steps             = 4 
MoL::MoL_Num_Scratch_Levels             = 1

#Se necesita incluir métodos disipativos

# Seguimientos de los agujeros negros 

# Agujero negro mayor
CarpetTracker::surface                      [0] = 0
PunctureTracker::track                      [0] = yes
PunctureTracker::initial_x                  [0] = $xp
PunctureTracker::which_surface_to_store_info[0] = 0

#Agujero negro menor
CarpetTracker::surface                      [1] = 1
PunctureTracker::track                      [1] = yes
PunctureTracker::initial_x                  [1] = $xm
PunctureTracker::which_surface_to_store_info[1] = 1


#------------------------------------------------------------------------------
# Checador de Nans (valores no numericos)
#------------------------------------------------------------------------------
# Espinas necesarias:
#------------------------------------------------------------------------------
ActiveThorns = "NaNChecker"
#------------------------------------------------------------------------------
NaNChecker::check_every                 = 512
NaNChecker::action_if_found             = "termination"
NaNChecker::check_vars                  = "
	ADMBase::metric
	ADMBase::curv
	ADMBase::lapse
	ADMBase::shift
"
#------------------------------------------------------------------------------
# Diagnostico de parametros:
#------------------------------------------------------------------------------
Carpet::output_time                     = 1024
Carpet::storage_verbose                 = "no"
Carpet::verbose                         = "no"
Carpet::veryverbose                     = "no"


CarpetLib::output_bboxes                = "no"
CarpetLib::print_memstats_every         = 1024

CarpetMask::verbose                     = "yes"
CarpetReduce::verbose                   = "no"
CarpetRegrid2::verbose                  = "yes"

CarpetTracker::verbose                  = "yes"


SphericalSurface::verbose               = "yes"

TwoPunctures::verbose                   = "yes"
PunctureTracker::verbose                = "yes"


#------------------------------------------------------------------------------
# Datos de salida:
#------------------------------------------------------------------------------
# Espinas necesarias 
#------------------------------------------------------------------------------
ActiveThorns = "CarpetIOBasic"
ActiveThorns = "CarpetIOScalar"
ActiveThorns = "CarpetIOASCII"
Activethorns = "CarpetIOHDF5"
#------------------------------------------------------------------------------
IOBasic::outInfo_every          = 128
IOBasic::outInfo_reductions     = "norm2"
IOBasic::outInfo_vars           = "
        Carpet::physical_time_per_hour
        ML_ADMConstraints::H "

IO::out_dir = $parfile

# for scalar reductions of 3D grid functions
IOScalar::one_file_per_group    = yes
IOScalar::outScalar_every       = 128
IOScalar::outScalar_vars        = "
        ADMBase::laps "

IOASCII::one_file_per_group     = yes

IOASCII::output_symmetry_points = no
IOASCII::out3D_ghosts           = no

# # output just at one point (0D)
# IOASCII::out0D_every = 128
# IOASCII::out0D_vars  = " "
#         ADMBase::metric
#         ADMBase::curv
#         ADMBase::lapse
#         ADMBase::shift
#         WEYLSCAL4::Psi4r
#         WEYLSCAL4::Psi4i
#         ML_ADMConstraints::ML_Ham
#         ML_ADMConstraints::ML_mom "

IOASCII::out1D_every = 128
IOASCII::out1D_vars  = "
        ADMBase::metric
        ADMBase::curv
        ADMBase::lapse
        ADMBase::shift  "

IOHDF5::use_checksums          = yes
IOHDF5::compression_level      = 1
IOHDF5::one_file_per_group     = yes

IOHDF5::output_symmetry_points = no
IOHDF5::out3D_ghosts           = no

IOHDF5::out2D_every            = 512
IOHDF5::out2D_vars             = "
        ADMBase::metric
        ADMBase::curv
        ADMBase::lapse
        ADMBase::shift
        WEYLSCAL4::Psi4r
        WEYLSCAL4::Psi4i
        ML_ADMConstraints::ML_Ham
        ML_ADMConstraints::ML_mom
"

# for 3D HDF5 output
IOHDF5::out3D_every            = 512
IOHDF5::out3D_vars             = "
        WEYLSCAL4::Psi4r "
"""
open(re.sub(r'(.*)\.rpar$', r'\1.par', sys.argv[0]), 'w').write(re.sub(r'\n *',r'\n',Template(Template(lines).substitute(locals())).substitute(locals())))





